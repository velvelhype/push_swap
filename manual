前後関係を変える方法は
ローテート＋プッシュ
スワップ

ローテーとができることってダミーの位置を変えること
プッシュにしてもスワップにしてもダミーの直後でやらないといけないから
ダミーの位置を帰られるローテートは偉大
まずローテートして探索


＝法則＝
❶　bに飛ばした要素は
逆順に整列されプッシュ直しをされる
ad 45
bd 321
こういうこと

❷　bに飛ばさないと整理不可能な状態がある
３２１４


＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

想像ライン
まず手駒を把握する
スワップ
ローテート
プッシュ
これだけよ
やること
ー仕組みを考える
ー全探索を使った方法も考える

d３２１４５
d
d４５
d１２３
d４５
d３２１
d１２３４５
d

d 7 1 2 3 4 5 6
d 2 3 4 5 6 7 1

ソート関数を作る
この際必要な手順は示されている通り

pbとかraの発動条件を突き詰めていく？
自分の手駒をまずは把握

ほんと難しいな

入力を受け取ってリストにできたが、
じゃあ今度はそれをソートにかける

もし3  5  ２　１　４だったら？

あとは
sb できてるはず要素数を絞らなければいけない
ss saとsbをやる
pa　pbの逆をやる
rb　raを逆だけやればいい
rr　raとrbやればいい
rrb　rraをbにすればいいじゃん
rrr　rra amd rrbやればいいじゃん
なんだけどこの後のソートの組み方がわかってないから
それを最初にやった方がいい　
どうやってソートするんだ
そもそも辿り着く方法すら知らない
syamahiみるか

４種類終わった

pb　まずbのダミーを用意した

sa 終わった


とりあえず実装
sa swap a 最初の二個を入れ替える
pb　push b　aの最初の要素をbの最初に入れる　aが空なら何もしない

ra　rotate a　要素を回す　最初のスタックが最後のものになる
    ダミーポインタと先頭ポインタを入れ替えればいい！
    入れ替えるもの、ダミーフラグ,先頭のバリューをダミーないにコピー

rra　スタックが　最後のスタックが最初にいく


ダミーポインタを入れなければ

引数があるかぎりそれをリストにぶちこみ続ける仕組みを作る

最初にダミーポインターと、
今あるリストにぶちこんだやつを作る
-val     値
-ネクスト　nextはダミー
-プリ　　　ダミー

次
リストの最後まで行くことから
まず次の構造体を用意することから、
メモリ確保して、バリュー入れる
-val     値
-ネクスト　ダミー
-プリ　　　前の奴